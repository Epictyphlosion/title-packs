// -------------------------------------- //
//  GIANT HUNT ARENA by domino54          //
//  script version: 2017-05-01            //
// -------------------------------------- //

#RequireContext CSmMapType

#Const Version			"2017-05-01"
#Const MapTypeVersion	1
#Const ScriptName		"MapTypes/ShootMania/GiantHuntArena.Script.txt"

#Include "TextLib" as TL
#Include "Libs/Nadeo/Anchor.Script.txt" as Anchor
#Include "Libs/Nadeo/MapType.Script.txt" as MapType
// Custom libraries
#Include "Libs/domino54/EditAnchors.Script.txt" as EditAnchors

// ---------------------------------- //
// Constants
// ---------------------------------- //
#Const C_Rules "$<%11.$> Place at least one one SpawnHunters.\n$<%12.$> Place at least one SpawnGiant.\n$<%13.$> Place a bunch of Checkpoints as targets for the Giant. Goals are also accepted."

// ---------------------------------- //
// Functions
// ---------------------------------- //

// ---------------------------------- //
/// Initialize the anchors
Void InitAnchors() {
	foreach (Anchor in AnchorData) {
		if (Anchor.DefaultTag == "Spawn") {
			if (Anchor.Tag != "SpawnHunters" && Anchor.Tag != "SpawnGiant") Anchor.Tag = "SpawnHunters";
		}
		else if (Anchor.DefaultTag == "Goal") {
			if (Anchor.Tag != "Checkpoint") Anchor.Tag = "Checkpoint";
		}
		else Anchor.Tag = Anchor.DefaultTag;
		Anchor.Order = Anchor.DefaultOrder;
	}
}

// ---------------------------------- //
/// Check if the map is valid
Void UpdateValidability() {
	ValidationStatus = CSmMapType::ValidationStatus::NotValidable;
	InitAnchors();
	Anchor::UpdateAnchorCounts();

	if (!Anchor::HasAtLeastOneAnchor("SpawnHunters", 0, _("You must place at least one \"SpawnHunters\"!"))) return;
	if (!Anchor::HasAtLeastOneAnchor("SpawnGiant", 0, _("You must place at least one \"SpawnGiant\"!"))) return;
	if (!Anchor::HasAtLeastOneAnchor("Checkpoint", 0, _("You must place at least one \"Checkpoint\"!"))) return;

	// Map is valid
	ValidationStatus = CSmMapType::ValidationStatus::Validated;	
}

// ---------------------------------- //
/// Show the anchor edition manialink
Void EditAnchorData(Ident _EditedAnchorDataId) {
	if (_EditedAnchorDataId == NullId) return;
	UpdateValidability();
	EditAnchors::EditAnchor(_EditedAnchorDataId);
	UpdateValidability();
}

// ---------------------------------- //
// Main
// ---------------------------------- //
main() {
	MapType::SetVersion(MapTypeVersion);
	UpdateValidability();
	CustomEditAnchorData = True;
	
	EditAnchors::SetRulesText(TL::Compose(C_Rules, "$o$070"));
	EditAnchors::SetAvailableTags(["Spawn" => ["SpawnHunters", "SpawnGiant"]]);
	
	// ---------------------------------- //
	// Yield
	// ---------------------------------- //
	while (True) {
		yield;
		
		// ---------------------------------- //
		// Events management
		foreach (Event in PendingEvents) {
			switch (Event.Type) {
				case CPluginEvent::Type::MapModified	: UpdateValidability();			
				case CPluginEvent::Type::EditAnchor		: EditAnchorData(Event.EditedAnchorDataId);
			}
		}
	}
}